name: Build ImageDateFixer for macOS (Intel + ARM + Universal)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos:
    name: Build for ${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: intel
            runner: macos-13   # Intel èŠ¯ç‰‡çŽ¯å¢ƒ
            python: "3.11"
          - arch: arm
            runner: macos-14   # Apple Silicon (M1/M2/M3)
            python: "3.11"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pillow pyinstaller

      - name: Build macOS app
        run: |
          APP_NAME="ImageDateFixer-${{ matrix.arch }}"
          pyinstaller --windowed --onedir --name "$APP_NAME" fix_image_time.py
          echo "âœ… Build completed for $APP_NAME"

      - name: Package build
        run: |
          cd dist
          zip -r "${{ matrix.arch }}-ImageDateFixer.zip" "ImageDateFixer-${{ matrix.arch }}"
          echo "ðŸ“¦ Created ZIP for ${{ matrix.arch }}"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ImageDateFixer-${{ matrix.arch }}-macOS
          path: dist/${{ matrix.arch }}-ImageDateFixer.zip

  merge-universal:
    name: Merge Intel + ARM â†’ Universal Binary
    needs: build-macos
    runs-on: macos-14
    steps:
      - name: Download Intel build
        uses: actions/download-artifact@v4
        with:
          name: ImageDateFixer-intel-macOS
          path: intel

      - name: Download ARM build
        uses: actions/download-artifact@v4
        with:
          name: ImageDateFixer-arm-macOS
          path: arm

      - name: Merge into Universal Binary
        run: |
          mkdir -p dist
          echo "ðŸ”§ Merging Intel + ARM builds into Universal binary..."
          lipo -create \
            "intel/ImageDateFixer-intel/ImageDateFixer" \
            "arm/ImageDateFixer-arm/ImageDateFixer" \
            -output "dist/ImageDateFixer-universal"
          cp -R "arm/ImageDateFixer-arm.app" "dist/ImageDateFixer-universal.app"
          lipo -create \
            "intel/ImageDateFixer-intel.app/Contents/MacOS/ImageDateFixer-intel" \
            "arm/ImageDateFixer-arm.app/Contents/MacOS/ImageDateFixer-arm" \
            -output "dist/ImageDateFixer-universal.app/Contents/MacOS/ImageDateFixer-universal"
          cd dist
          zip -r "ImageDateFixer-universal-macOS.zip" "ImageDateFixer-universal.app"
          echo "âœ… Universal binary created successfully!"

      - name: Upload Universal app
        uses: actions/upload-artifact@v4
        with:
          name: ImageDateFixer-universal-macOS
          path: dist/ImageDateFixer-universal-macOS.zip
