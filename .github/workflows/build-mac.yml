name: Build ImageDateFixer for macOS (Intel + ARM)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos:
    name: Build for ${{ matrix.arch }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - arch: intel
            runner: macos-13   # Intel Mac
            python: "3.11"
          - arch: arm
            runner: macos-14   # Apple Silicon (M1/M2/M3)
            python: "3.11"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pillow pyinstaller

      - name: Build macOS app
        run: |
          APP_NAME="ImageDateFixer-${{ matrix.arch }}"
          pyinstaller --windowed --onedir --name "$APP_NAME" fix_image_time.py
          echo "✅ Build completed for $APP_NAME"

      - name: Package build into ZIP (preserve .app structure)
        run: |
          cd dist
          APP_NAME="ImageDateFixer-${{ matrix.arch }}"
          ZIP_NAME="${{ matrix.arch }}-ImageDateFixer.zip"
          # 使用 ditto 打包，保留可执行权限
          ditto -c -k --sequesterRsrc --keepParent "$APP_NAME" "$ZIP_NAME"
          echo "📦 Created ZIP for $APP_NAME using ditto"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ImageDateFixer-${{ matrix.arch }}-macOS
          path: dist/${{ matrix.arch }}-ImageDateFixer.zip
